syntax = "proto3";

package collector.v1;

option go_package = "github.com/grafana/alloy-remote-config/api/gen/proto/go/collector/v1;collectorv1";

// GetConfigRequest is the request message to get an collector's configuration.
// The collector's ID and any supplied metadata are used to determine which
// pipelines to include in the configuration.
message GetConfigRequest {
  string id = 1;
  map<string, string> metadata = 2;
}

message GetConfigResponse {
  string content = 1;
}

message GetCollectorRequest {
  string id = 1;
}

message Collector {
  string id = 1;
  map<string, string> metadata = 2;
}

message ListCollectorsRequest {
}

message Collectors {
  repeated Collector collectors = 1;
}

message PutCollectorRequest {
  Collector collector = 1;
}

message DeleteCollectorRequest {
  string id = 1;
}

message DeleteCollectorResponse {
}

// CollectorService is the service that provides remote configuration for the collector.
// It is used to register and update the collector's metadata, and to fetch the
// collector's configuration.
service CollectorService {
  // GetConfig returns the collector's configuration. 
  rpc GetConfig (GetConfigRequest) returns (GetConfigResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  };

  // GetCollector returns information about the collector.
  rpc GetCollector (GetCollectorRequest) returns (Collector);

  // ListCollectors returns information about all collectors.
  rpc ListCollectors (ListCollectorsRequest) returns (Collectors);

  // PutCollector creates or replaces a collector.
  rpc PutCollector (PutCollectorRequest) returns (Collector);

  // DeleteCollector deletes an existing collector.
  rpc DeleteCollector (DeleteCollectorRequest) returns (DeleteCollectorResponse);
}
